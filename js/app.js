  'use strict';

var app = (function(document, $) {
	var docElem = document.documentElement,
		_userAgentInit = function() {
			docElem.setAttribute('data-useragent', navigator.userAgent);
		},
		_init = function() {

			$(document).foundation();
      // needed to use joyride
      // doc: http://foundation.zurb.com/docs/components/joyride.html

      $(document).on('click', '#start-jr', function () {
          $(document).foundation('joyride', 'start');
      });
			_userAgentInit();

			// SVG / PNG sostituisce i svg con PNG per i browser piÃ¹ vecchi
			// Per ora abbiamo solo il logo 
			  if(!Modernizr.svg) {
			    $('img[src*="svg"]').attr('src', function () {
			    return $(this).attr('src').replace('.svg', '.png');
			  });
			}

      console.log(Foundation.MediaQuery);




			/*
######## ##       ######## ##     ##     ######  ##       #### ########  ######## ########  
##       ##       ##        ##   ##     ##    ## ##        ##  ##     ## ##       ##     ## 
##       ##       ##         ## ##      ##       ##        ##  ##     ## ##       ##     ## 
######   ##       ######      ###        ######  ##        ##  ##     ## ######   ########  
##       ##       ##         ## ##            ## ##        ##  ##     ## ##       ##   ##   
##       ##       ##        ##   ##     ##    ## ##        ##  ##     ## ##       ##    ##  
##       ######## ######## ##     ##     ######  ######## #### ########  ######## ##     ## 
                                                                        
                                                                         
namespace: "flex-",             //{NEW} String: Prefix string attached to the class of every element generated by the plugin
selector: ".slides > li",       //{NEW} Selector: Must match a simple pattern. '{container} > {slide}' -- Ignore pattern at your own peril
animation: "fade",              //String: Select your animation type, "fade" or "slide"
easing: "swing",               //{NEW} String: Determines the easing method used in jQuery transitions. jQuery easing plugin is supported!
direction: "horizontal",        //String: Select the sliding direction, "horizontal" or "vertical"
reverse: false,                 //{NEW} Boolean: Reverse the animation direction
animationLoop: true,             //Boolean: Should the animation loop? If false, directionNav will received "disable" classes at either end
smoothHeight: false,            //{NEW} Boolean: Allow height of the slider to animate smoothly in horizontal mode  
startAt: 0,                     //Integer: The slide that the slider should start on. Array notation (0 = first slide)
slideshow: true,                //Boolean: Animate slider automatically
slideshowSpeed: 7000,           //Integer: Set the speed of the slideshow cycling, in milliseconds
animationSpeed: 600,            //Integer: Set the speed of animations, in milliseconds
initDelay: 0,                   //{NEW} Integer: Set an initialization delay, in milliseconds
randomize: false,               //Boolean: Randomize slide order

// Usability features
pauseOnAction: true,            //Boolean: Pause the slideshow when interacting with control elements, highly recommended.
pauseOnHover: false,            //Boolean: Pause the slideshow when hovering over slider, then resume when no longer hovering
useCSS: true,                   //{NEW} Boolean: Slider will use CSS3 transitions if available
touch: true,                    //{NEW} Boolean: Allow touch swipe navigation of the slider on touch-enabled devices
video: false,                   //{NEW} Boolean: If using video in the slider, will prevent CSS3 3D Transforms to avoid graphical glitches

// Primary Controls
controlNav: true,               //Boolean: Create navigation for paging control of each clide? Note: Leave true for manualControls usage
directionNav: true,             //Boolean: Create navigation for previous/next navigation? (true/false)
prevText: "Previous",           //String: Set the text for the "previous" directionNav item
nextText: "Next",               //String: Set the text for the "next" directionNav item

// Secondary Navigation
keyboard: true,                 //Boolean: Allow slider navigating via keyboard left/right keys
multipleKeyboard: false,        //{NEW} Boolean: Allow keyboard navigation to affect multiple sliders. Default behavior cuts out keyboard navigation with more than one slider present.
mousewheel: false,              //{UPDATED} Boolean: Requires jquery.mousewheel.js (https://github.com/brandonaaron/jquery-mousewheel) - Allows slider navigating via mousewheel
pausePlay: false,               //Boolean: Create pause/play dynamic element
pauseText: 'Pause',             //String: Set the text for the "pause" pausePlay item
playText: 'Play',               //String: Set the text for the "play" pausePlay item

// Special properties
controlsContainer: "",          //{UPDATED} Selector: USE CLASS SELECTOR. Declare which container the navigation elements should be appended too. Default container is the FlexSlider element. Example use would be ".flexslider-container". Property is ignored if given element is not found.
manualControls: "",             //Selector: Declare custom control navigation. Examples would be ".flex-control-nav li" or "#tabs-nav li img", etc. The number of elements in your controlNav should match the number of slides/tabs.
sync: "",                       //{NEW} Selector: Mirror the actions performed on this slider with another slider. Use with care.
asNavFor: "",                   //{NEW} Selector: Internal property exposed for turning the slider into a thumbnail navigation for another slider

// Carousel Options
itemWidth: 0,                   //{NEW} Integer: Box-model width of individual carousel items, including horizontal borders and padding.
itemMargin: 0,                  //{NEW} Integer: Margin between carousel items.
minItems: 0,                    //{NEW} Integer: Minimum number of carousel items that should be visible. Items will resize fluidly when below this.
maxItems: 0,                    //{NEW} Integer: Maxmimum number of carousel items that should be visible. Items will resize fluidly when above this limit.
move: 0,                        //{NEW} Integer: Number of carousel items that should move on animation. If 0, slider will move all visible items.
                                
// Callback API
start: function(){},            //Callback: function(slider) - Fires when the slider loads the first slide
before: function(){},           //Callback: function(slider) - Fires asynchronously with each slider animation
after: function(){},            //Callback: function(slider) - Fires after each slider animation completes
end: function(){},              //Callback: function(slider) - Fires when the slider reaches the last slide (asynchronous)
added: function(){},            //{NEW} Callback: function(slider) - Fires after a slide is added
removed: function(){}           //{NEW} Callback: function(slider) - Fires after a slide is removed


*/


//$('ul.slides li').css('opacity', 0);      

var iniW = $('ul.slides li').width();
var iniH = $('ul.slides li').height();
var diff = 400;
var altezza = 300;


$('.flexslider').flexslider({
    animation: 'slide',
    controlNav: false,
    slideshowSpeed: 2000000000,
    start: function() {
      //$('ul.slides').css({'overflow', 'hidden'});
      //$('ul.slides li').css('overflow', 'hidden');
      //$('ul.slides>li>img').css({'width':50000,'height':iniH+diff});
      //$('div.flex-viewport').css({'height':altezza});
    },
    before: function (slider) {
      //TweenLite.to('li.flex-active-slide', 0.6, {opacity:0});
      //TweenLite.to($(this), 0.6, {opacity:0});      
      //slider.slides.css('width',iniW*1100%);
      //TweenLite.fromTo('img.active-image', 3, {width:iniW,height:iniH},{width:iniW+20,height:iniH+20});      
    },
    added: function () {
      //TweenLite.to('li.flex-active-slide', 0.6, {opacity:1});
     //console.log($(this));
      //TweenLite.to($(this), 0.6, {opacity:1});
      // $('li.flex-active-slide img').css({
      //   height: iniH,
      //   width: iniW
      // });

    }    
});



/*
 ######   #######  ##        #######  ########  #### 
##    ## ##     ## ##       ##     ## ##     ##  ##  
##       ##     ## ##       ##     ## ##     ##  ##  
##       ##     ## ##       ##     ## ########   ##  
##       ##     ## ##       ##     ## ##   ##    ##  
##    ## ##     ## ##       ##     ## ##    ##   ##  
 ######   #######  ########  #######  ##     ## #### 
*/

      // Colora gli elementi del menu fullscreen
      $('li.fs-mega-map').each(function(index, el) {
              $(this).hover(function() {
                /* Stuff to do when the mouse enters the element */
                var bgcolor = $(this).attr('bgc');
                $(this).css('backgroundColor', bgcolor);
              }, function() {
                /* Stuff to do when the mouse leaves the element */
                $(this).css('backgroundColor', 'transparent');
              });
      });


      // Colora titolini in maniera random
      $( '.random_colored' ).each(function( index ) {            
            var message = $( this ).text();
            var lun_message = message.length;
            var colors = new Array('#88101D','#AC9865','#615931','#25545D','#C89B67','#AC502A','#008173','#735079','#8A8444','#956F3E');
            var lun_colors = colors.length;
            var newHtml = '';

            for (var i = 0; i < lun_message; i++) {
                var randomnumber=Math.floor(Math.random()*lun_colors);              
                newHtml += '<span style="color:' + colors[randomnumber] + ';">' + message[i] + '</span>';
                // newHtml += '<span style=\'color:' + colors[i] + ';\'>' + message[i] + '</span>';
                //i = ( i >= lun_colors ? 0 : i )
            }
            $( this ).html(newHtml) ;
      });


      $('.menuAnimated').click(function(event) {
        var tl = new TimelineLite();
        tl.to($(this), 0.1, {'margin-top':10}).to($(this), 0.3, {'margin-top':0});
      });




      // Mostra la mappa full screen del sito

      $('.fullscreen-map-toggler').click(function(event) {
          event.preventDefault();          
          toggleFullscreenMap();                
      });      

      function toggleFullscreenMap() {
        
        // Se non Ã¨ visibile
          if ($('#fullscreen-mega-map').css('display') === 'none') {
            $('body').css('overflow', 'hidden');
            $(this).parent().css('backgroundColor', '#EFEFE8');
            $('#fullscreen-mega-map').css('overflow', 'auto');
            TweenLite.fromTo ('#fullscreen-mega-map' , 0.3, {opacity:0}, {opacity:1,display:'block', top:$(window).scrollTop()});
            $( 'i#menuarrow' ).replaceWith( '<i id="menuarrow" class="fa fa-chevron-up" style="display:inline"></i>' );         
          } 
          // Se invece Ã¨ il menu Ã¨ aperto
          else{
            TweenMax.to('#fullscreen-mega-map', 0.6, {opacity:0, display:'none'});
            $(this).parent().css('backgroundColor', 'transparent');
            $('body').css('overflow', 'auto');
            $( 'i#menuarrow' ).replaceWith( '<i id="menuarrow" class="fa fa-chevron-down" style="display:inline"></i>' );
          }    

      };

      // Chiude la mappa fullscreen cliccandoci sopra ma i link continuano a funzionare
      $('#fullscreen-mega-map').click(function(event) {        
          //event.preventDefault();
          toggleFullscreenMap();
         
      });   














  },   // end init function


      _animazione_logo = function() {

            // variabili altezza maassima di scrollspay e dimensioni CSS iniziali e finali
            var scrollspy_max = 200;

            var endVal = {
              'hb' : parseInt( $('#logo-animato').css('background-size') , 10),
              'pt' : parseInt( $('#logo-animato').css('padding-top') , 10),
              'mt' : parseInt( $('#logo-animato').css('margin-top') , 10),
              'bm' : parseInt( $('#logo-spacer.animated').css('height') , 10),
              'issW' : parseInt( $('#iss-logo').css('width') , 10),
              'issH' : parseInt( $('#iss-logo').css('height') , 10)
            };

            var beginVal = {
              'hb' : 160,  // Dimensione iniziale logo
              'pt' : 180,
              'mt' : 40,
              'bm' : 310,  // Altezza del logo-spacer.animated
              'issW' : 61,
              'issH' : 61
            };      
            
            // Imposta lo stato iniziale

            if ( $(window).scrollTop() < scrollspy_max) {

              $('#logo-spacer.animated').css('height', beginVal.bm );
              $('.logo_large.animated').css({
                      paddingTop: beginVal.pt,
                      marginTop: beginVal.mt,
                      backgroundSize: beginVal.hb
               });
              $('#iss-logo.animated').css({
                      width: beginVal.issW,
                      height: beginVal.issH                      
               });
              
            }


          

            var calcola_percent = function (begin,end,perc) {
                var diff = begin - end;
                var percentuale = (diff / 100) * perc;
                return percentuale;
            };

            $(window).scrollspy({ 
                 min: 0 ,
                 max: scrollspy_max,

                 onEnter: function(element, position) {
                  //TweenMax.to('.logo',0.4,{ 'padding-top':beginVal['pt'], 'background-size':beginVal['hb'], 'margin-top':beginVal['mt']  });
                  
                 },
                 onLeave: function(element, position) {   
                    //TweenMax.to('div.logo_large.animated',0.8,{ 'padding-top':endVal['pt'], 'background-size':endVal['hb'], 'margin-top':endVal['mt']  });
                    $('div.logo_large.animated').css({ 'padding-top':endVal.pt, 'background-size':endVal.hb, 'margin-top':endVal.mt });
                    $('#logo-spacer.animated').css({'height': endVal.bm});
                    $('#iss-logo.animated').css({
                      width: endVal.issW,
                      height: endVal.issW
                    });
                 },
                 onTick: function(element, position) {

                    var perc = 100 * position.top / scrollspy_max;
                    perc = perc.toFixed(0);  // Percentuale dal top
                    var bgdiff_abs =  beginVal.hb - calcola_percent( beginVal.hb,endVal.hb,perc ).toFixed(0);
                    var ptdiff_abs =  beginVal.pt - calcola_percent( beginVal.pt,endVal.pt,perc ).toFixed(0);
                    var mtdiff_abs =  beginVal.mt - calcola_percent( beginVal.mt,endVal.mt,perc ).toFixed(0);
                    var bmdiff_abs =  beginVal.bm - calcola_percent( beginVal.bm,endVal.bm,perc ).toFixed(0);

                    TweenMax.to('div.logo_large.animated',0.4,{ 'padding-top':ptdiff_abs, 'background-size':bgdiff_abs, 'margin-top':mtdiff_abs });
                    TweenMax.to('#logo-spacer.animated',0.8,{'height': bmdiff_abs });

                    var issWdiff_abs =  beginVal.issW - calcola_percent( beginVal.issW,endVal.issW,perc ).toFixed(0);
                    var issHdiff_abs =  beginVal.issH - calcola_percent( beginVal.issH,endVal.issH,perc ).toFixed(0);
                    TweenMax.to('#iss-logo.animated',0.8,{'width': issWdiff_abs, 'height':issHdiff_abs });


                 }
           });

      };  // end animazione minore
	return {
		init: _init,
    animazioneLogo: _animazione_logo
	};

})(document, jQuery);



(function() {
	  app.init();
    app.animazioneLogo();
})();

